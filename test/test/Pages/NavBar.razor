@page "/Nav"

<!DOCTYPE html>
@inject NavigationManager NavigationManager


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

@if (Globals.loginCondition)
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <nav>
        <a class="links" href="#"><i class="fa fa-home"></i> Home</a>
        <a class="links" href="/Cart"><i class="fa fa-shopping-cart"></i> Checkout</a>
        <div class="dropdown-menu">
            <button class="menu-btn"><i class="fa fa-user"></i> My Account</button>
            <div class="menu-content">
                <a class="links-hidden" href="/Profile">Profile</a>
                <a class="links-hidden" href="/MyBooks">My Books</a>
                <a class="links-hidden" href="/Hold">On Hold</a>
                <a class="links-hidden" href="/OverdueDefault">Payments</a>
                <a class="links-hidden" href="/History">History</a>
            </div>
        </div>

        <button @onclick="logOut" class="menu-btn"><i class="fa fa-sign-out" aria-hidden="true"></i>Log Out</button>
    </nav>

}
else
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <nav>
        <a class="links" href="#"><i class="fa fa-home"></i> Home</a>
        <a class="links" href="Cart"><i class="fas fa-shopping-bag"></i> My Bag</a>
        <div class="dropdown-menu">
            <button class="menu-btn"><i class="fa fa-user"></i> My Account</button>
            <div class="menu-content">
                <a class="links-hidden" href="/loginPageProfile">Profile</a>
                <a class="links-hidden" href="/loginPageMyBooks">My Books</a>
                <a class="links-hidden" href="/loginPageHold">On Hold</a>
                <a class="links-hidden" href="/loginPagePayments">Payments</a>
                <a class="links-hidden" href="/loginPageHistory">History</a>
            </div>
        </div>
        <div class="dropdown-menu">
            <a class="menu-btn" href="/loginPage"><i class="fa fa-sign-in" aria-hidden="true"></i> Login</a>
            <div class="menu-content">
                <input class="login" type="text" placeholder="Library Card" @bind="libraryCardValue" />
                <input class="login" type="password" placeholder="PIN" @bind="pinValue" />
                <div style="text-align: center;">
                    <div><a href="#" style="color: #bfbeba; font-size: 15px; ">Forgot Password?</a></div>
                    <div><a href="/createAccount" style="color: #bfbeba; ">Create Account</a></div>
                    <div><button @onclick="CheckInputCondition" style="margin-top:5px;" class="links-hidden1" href="#">Login</button></div>
                </div>
            </div>
        </div>
    </nav>
}



<style>
    .links-hidden1 {
        align-items: flex-end;
    }

    .bookrow {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .Header {
        display: flex;
        flex-direction: row;
        align-items: baseline;
        justify-content: space-between;
    }

    .Link {
        flex: 1;
    }

    .book1 {
        width: 150px;
        height: 250px;
        object-fit: cover;
        display: inline-block;
        margin-right: 20px;
    }

    .Title {
        font-size: 30px;
        font-weight: bold;
    }

    .Title1 {
        font-size: 30px;
        font-weight: bold;
        margin-top: 10px;
    }

    .search {
        width: 224.5px;
        font-size: 20px;
        border: 1px solid;
    }

    .menu-btn {
        color: white;
        background-color: #302f2e;
        font-size: 18px;
        font-weight: bolder;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        border: none;
        text-decoration: none;
    }

        .menu-btn:hover {
            color: white;
        }

    .dropdown-menu {
        position: relative;
        display: inline-block;
        background-color: #302f2e;
        padding: 10px 16px;
        border: none;
    }

    .menu-content {
        display: none;
        position: absolute;
        background-color: #302f2e;
        min-width: 160px;
        z-index: 1;
    }

    nav {
        background-color: #302f2e;
    }

    .links,
    .links-hidden {
        display: inline-block;
        color: white;
        padding: 10px 16px;
        text-decoration: none;
        font-size: 18px;
        font-weight: bold;
    }

    .links-hidden, .links-hidden1 {
        display: block;
    }

    .links {
        display: inline-block;
    }

        .links-hidden:hover, .links-hidden1:hover,
        .links:hover {
            background-color: #7d7a78;
            color: white;
        }

    .dropdown-menu:hover .menu-content {
        display: block;
    }

    .dropdown-menu:hover .menu-btn {
        background-color: #302f2e;
    }

    .login {
        margin-left: 3px;
        margin-bottom: 5px;
        margin-top: 5px;
        width: 153px;
    }

    .links-hidden1 {
        display: inline-block;
        color: white;
        padding: 0px 5px;
        background-color: #69747a;
        text-decoration: none;
        font-size: 16px;
        margin-left: 3px;
        margin-bottom: 3px;
    }
</style>

@if (!string.IsNullOrEmpty(message))
{
    <p style="color:green">@message</p>
}

@if (!string.IsNullOrEmpty(message1))
{
    <p style="color:red">
        @message1</p">
    }

@code {
    private string libraryCardValue;
    private string pinValue;
    private string message;
    private string message1;


    private async Task CheckoutAsync(MouseEventArgs e)
    {
        await Task.Delay(2000); // Delays the execution for 2 seconds
        NavigationManager.NavigateTo("/loginPageCart"); // Redirects the user to the link after 2 seconds
    }


    private async Task CheckInputCondition()
    {
        await Task.Delay(2000);
        if (!string.IsNullOrEmpty(libraryCardValue) && !string.IsNullOrEmpty(pinValue))
        {

            Globals.loginCondition = true;
            message = "Login Successful!";
            await InvokeAsync(() => StateHasChanged());
            await Task.Delay(5000);
            message = "";
            await InvokeAsync(() => StateHasChanged());

        }
        else
        {
            message1 = "Incorrect Library Card Number or PIN";
            await InvokeAsync(() => StateHasChanged());
            await Task.Delay(10000);
            message1 = "";
            await InvokeAsync(() => StateHasChanged());

        }
    }
    private async Task logOut()
    {
        await Task.Delay(2000);
        Globals.loginCondition = false;
        NavigationManager.NavigateTo("/");
        message = "Logout Successful!";
        await InvokeAsync(() => StateHasChanged());
        await Task.Delay(5000);
        message = "";
        await InvokeAsync(() => StateHasChanged());

    }
    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
    }

}
