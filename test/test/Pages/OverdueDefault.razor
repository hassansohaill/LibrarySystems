@page "/OverdueDefault"

<NavBar />

<div class="overdueContainer">
    <body>
        
        @if (fees == 0)
        {
            <h1>You have no outstanding fees </h1>
        } else
        {
            <h1 class="overduesign">OVERDUE FEES</h1>
            <h1>Total Fees Due: $@feeOutput </h1>
            <button class="btn btn-danger" @onclick="(() =>payAllTogglePopup())"> Pay All </button>
        }
        
    </body>
        
        @if (showAllPopup)
        {
            @if (savedPayment)
            {
            <div style="position: absolute; top: 68px; left: 50%;top:50% ;transform: translate(-50%,-50%); width: 700px; height: 700px; background-color: #e8f4f8; overflow: auto; opacity: 1; box-shadow: 0 0 10px rgba(0, 0, 0, 0.35); text-align: center;overflow: hidden;">
                <button @onclick="payAllTogglePopup" class="toggle" type="button" style=" display: block; margin:  1% 1% 20px auto;background-color: transparent;background: #03549a;width: 40px;height: 40px;cursor: pointer;font-size: 25px;border-radius: 100%;"> &times  </button>

                <button class="btn btn-danger" style="top: 90%; position:fixed;transform: translateX(-50%); " @onclick="(() => RemoveAll())"> Finalize Payment </button>
            </div>
            } else{
            <div style="position: absolute; top: 68px; left: 50%;top:50% ;transform: translate(-50%,-50%); width: 700px; height: 700px; background-color: #e8f4f8; overflow: auto; opacity: 1; box-shadow: 0 0 10px rgba(0, 0, 0, 0.35); text-align: center;overflow: hidden;">
                <button @onclick="payAllTogglePopup" class="toggle" type="button" style=" display: block; margin:  1% 1% 20px auto;background-color: transparent;background: #03549a;width: 40px;height: 40px;cursor: pointer;font-size: 25px;border-radius: 100%;"> &times  </button>
                <p>Payment</p>
                <p>Payment</p>
                <button class="btn btn-danger" style="top: 90%; position:fixed;transform: translateX(-50%); " @onclick="(() => RemoveAll())"> Finalize Payment </button>
            </div>
            }
        
        }
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-11">
            <table class="table">
                <tbody>

                        @foreach (var book in books)
                        {

                            <tr class="hold-item">
                                <td>
                                    <img src="@book.CoverImage" alt="Book Cover" height="120" />
                                </td>
                                <td class="book-details">
                                    <p>Title: @book.Title</p>
                                    <p>Author: @book.Author</p>
                                    <p>Type: @book.Type</p>
                                </td>
                                <td>
                                    <p>Due Date: @book.DueDate,</p>
                                    <p>Days Overdue: @book.DaysDue</p>
                                </td>
                                <td>
                                    <p></p>
                                    <p>Cost: $@book.Cost</p>
                                </td>
                                <td>
                                    <button class="btn btn-danger" @onclick="(() =>  TogglePopup(book.Author, book.Title, book.Cost, book.Type, book.DaysDue, book.Status, book))"> Pay </button>
                                    @if (showPopup)
                                    {
                                        <div style="position: absolute; top: 68px; left: 50%;top:50% ;transform: translate(-50%,-50%); width: 700px; height: 700px; background-color: #e8f4f8; overflow: auto; opacity: 1; box-shadow: 0 0 10px rgba(0, 0, 0, 0.35); text-align: center;overflow: hidden;">
                                            <button @onclick="Toggleclose" class="toggle" type="button" style=" display: block; margin:  1% 1% 20px auto;background-color: transparent;background: #03549a;width: 40px;height: 40px;cursor: pointer;font-size: 25px;border-radius: 100%;"> &times  </button>
                                            <p>Payment</p>
                                            <p>Payment</p><p>Payment</p>
                                            <p>Payment</p>
                                            <button class="btn btn-danger" style="top: 90%; position:fixed;transform: translateX(-50%); " @onclick="(() => RemoveBook(selected))"> Finalize Payment </button>
                                        </div>
                                    }

                                </td>.

                            </tr>


                        }
                    
                    
                </tbody>
            </table>
        </div>
        <div class="col-lg-1"></div>
    </div>
</div>







<style>
    .popup button {
    display: block;
    margin: 0 0 20px auto;
    background-color: transparent;
    font-size: 30px;
    color: #ffffff;
    background: #03549a;
    border-radius: 100%;
    width: 40px;
    height: 40px;
    border: none;
    outline: none;
    cursor: pointer;
    }
    .paymentPopup{
    width: 420px;
    padding: 30px 40px;
    position: = fixed;
    transform: translate(-50%,-50%);
    left: 50%;
    top: 50%;
    border-radius: 8px;
    display: none;
    font-family: “Poppins”,sans-serif;
    text-align: center;
    background-color: #0855ae;
    }

    .overdueContainer {
    text-align: center;
    margin-top: 50px;


    }

    .paynow {
    margin-left: 10px;
    display: inline-block;
    }

    .container {
    margin-top: 100px;


    }
</style>

@code {
    private List<Book> books = new List<Book>
    {
        new Book
        {
            CoverImage = "images/Book9.png",
            Title = "Outlive: The Science and Art of Longetivy",
            Author = "Peter Attia",
            Type = "Paperback",
            DueDate = "03/01/2023",
            DaysDue = "40 Days",
            Status = "Ready to be picked up",
            Cost = "4.58",
        },
        new Book
        {
            CoverImage = "images/Book2.png",
            Title = "My Secret Sister",
            Author = "Lauren Westwood",
            Type = "Paperback",
            DueDate = "03/21/2023",
            DaysDue = "20 Days",
            Status = "Waitlist Pos 10",
            Cost = "2.57"
        },
        new Book
        {
            CoverImage = "images/Book3.png",
            Title = "The Fifth Juror",
            Author = "Lori Lacefield",
            Type = "Paperback",
            DueDate = "04/05/2023",
            DaysDue = "5 Days",
            Status = "Waitlist Pos 4",
            Cost = "0.75"
        },
    };

    double fees = 0;
    string feeOutput="";
    private void calculateFee()
    {
        fees = 0;
        foreach(var book in books)
        {
            double intCost = double.Parse(book.Cost);
            fees += intCost;
        }
    }
    private void precision()
    {
        feeOutput = fees.ToString("F2");
    }

    private void RemoveBook(Book remove)
    {
        books.Remove(remove);
        Toggleclose();
        calculateFee();
        precision();
    }

    private class Book
    {
        public string CoverImage { get; set; }
        public string Title { get; set; }
        public string Author { get; set; }
        public string Type { get; set; }
        public string DueDate { get; set; }
        public string DaysDue { get; set; }
        public string Status { get; set; }
        public string Cost { get; set; }
    }

    bool savedPayment = false;
    bool showPopup = false;
    bool showAllPopup = false;  
    string popupAuthor;
    string popupTitle;
    string popupCost;
    string popupDueDays;
    string popupType;
    string popupDate;
    Book selected;
    bool showFullText = false;

    void TogglePopup(string author, string title, string cost, string type, string days, string dueDate, Book selectBook)
    {
        showPopup = !showPopup;
        popupAuthor = author;
        popupTitle = title;
        popupCost = cost;
        popupDueDays = days;
        popupType = type;
        popupDate = dueDate;
        selected = selectBook;
    }

    void RemoveAll()
    {
        books.Clear();
        payAllTogglePopup();
        calculateFee();
        precision();
    }

    void payAllTogglePopup()
    {
        showAllPopup = !showAllPopup;
    }

    void Toggleclose()
    {
        showPopup = !showPopup;
    }
    protected override void OnInitialized()
    {
        calculateFee();
        precision();
    }


}

