@page "/"

<!DOCTYPE html>
@inject NavigationManager NavigationManager
@using test.Shared

<head>
    <PageTitle>Library Interface</PageTitle>
</head>

    <NavBar />
    <body class="overlay">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

        <div style="
        margin-top: 25px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        ">
            <div>
                <input class="search" type="text" placeholder="Search...">
            </div>
            <div>
                <button style="
                opacity: 75%;
                height: 34px;
                border: 1px solid;
            ">
                    Search
                </button>
            </div>
        </div>

        @foreach (var category in bookDictionary.Keys)
        {
            <div class="Header">
                <div class="Title">
                    @category
                </div>
                <div class="Link>">
                    <a href="#">See All ></a>
                </div>
            </div>
            <ul class="bookList">
                @foreach (var book in bookDictionary[category])
                {
                    <li class="bookItem">
                        <img type="button" @onclick="(e) => TogglePopup(book.Author, book.Title, book.Image, book.Description)" class="book1" src=@book.Image />
                        <div class="bookTitle" style="color: #007185; font-size: 15px; width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                            <a href="/OpenBook">@book.Title</a>
                        </div>

                        <div style="font-size: 12px; width: 150px;">
                            by @book.Author
                        </div>
                        @if (@book.Status == "Available")
                        {
                            <div style="color: green; font-size: 12px;">
                                @book.Status
                            </div>
                        }
                        else
                        {
                            <div style="color: red; font-size: 12px;">
                                @book.Status
                            </div>
                        }

                    </li>
                }
            </ul>
        }

    </body>

        @if (showPopup)
        {
            <div style="position: fixed; top: 65px; right: 0; width: 500px; height: calc(100% - 65px); background-color: white; overflow: auto; opacity:1;">
                <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -90%);">
                    <img class="book2" src= "@popupImage" />
                </div>
            </div>

            <style>
                .overlay {
                    position: fixed;
                    width: 100%;
                    height: 100%;
                    overflow: hidden;
                    opacity: 0.7;
                }
                    
            </style>
        }
        else
        {
            <style>
                overlay {
                    position: static;
                    width: auto;
                    height: auto;
                    overflow: auto;
                    opacity: 1;
                }
            </style>
        }


        @code {

            public class Book
            {
                public string Author { get; set; }
                public string Title { get; set; }
                public string Category { get; set; }
                public string Status { get; set; }
                public string Image { get; set; }
                public int num { get; set; }
                public string Description { get; set; }
            }

            private List<Book> books = new List<Book>()
                        {
            new Book() { Author = " David Goggins", Title = "Can't Hurt Me", Category = "Popular" , Status = "Available" , num = 1 , Image = "images/Book1.png", Description = ""},
            new Book() { Author = "Lauren Westwood", Title = "My Secret Sister", Category = "Popular" ,Status = "Available", num = 2 , Image = "images/Book2.png", Description = "" },
            new Book() { Author = "Lori Lacefield", Title = "The Fifth Juror", Category = "Popular",Status =  "Available", num = 3 , Image = "images/Book3.png", Description = ""},
            new Book() { Author = "Jennifer Finney Boylan", Title = "Mad Honey", Category = "Popular", Status = "Available", num = 4 , Image = "images/Book4.png", Description = ""},
            new Book() { Author = "Judy Dyer", Title = "Empath", Category = "Popular" , Status = "Unavailable" , num = 5 , Image = "images/Book5.png", Description = ""},
            new Book() { Author = "Kate Morton", Title = "Homecoming: A Novel", Category = "Popular" , Status = "Unavailable" , num = 11 , Image = "images/Book11.png", Description = ""},
            new Book() { Author = "Kelly Starrett", Title = "Built to Move: The Ten Essential Habits to Help You Move Freely and Live Fully", Category = "Popular" , Status = "Available" , num = 12 , Image = "images/Book12.png", Description = ""},
            new Book() { Author = "Curtis Sittenfeld ", Title = "Romantic Comedy: A Novel", Category = "Popular" , Status = "Available" , num = 13 , Image = "images/Book13.png", Description = ""},
            new Book() { Author = "Laura Dostaler", Title = "Spring Skills Workbook 2023", Category = "Popular" , Status = "Unavailable" , num = 14 , Image = "images/Book14.png", Description = ""},

            new Book() { Author = "Collen Hoover", Title = "Never Never", Category = "New Releases", Status = "Unavailable" , num = 6  , Image = "images/Book6.png", Description = ""},
            new Book() { Author = "Dav Pilkey", Title = "Dog Man: Twenty Thousand Fleas Under the Sea", Category = "New Releases" ,Status = "Available" , num = 7 , Image = "images/Book7.png", Description = ""},
            new Book() { Author = "Margaret Atwood", Title = "Old Babies in the Woods: Stories", Category = "New Releases" , Status = "Unavailable" , num = 8 , Image = "images/Book8.png", Description = ""},
            new Book() { Author = "Peter Attied, MD", Title = "Outlive", Category = "New Releases" , Status = "Available" , num = 9 , Image = "images/Book9.png"},
            new Book() { Author = "Tracy West", Title = "Dragon Masters: Cure of the Shadow Dragon", Category = "New Releases" , Status = "Available", num = 10 , Image = "images/Book10.png", Description = ""},


        };

            private Dictionary<string, List<Book>> bookDictionary;

            protected override void OnInitialized()
            {
                bookDictionary = books.GroupBy(b => b.Category)
                    .ToDictionary(g => g.Key, g => g.ToList());
            }


            void BookOpen(int id)
            {
                NavigationManager.NavigateTo($"/OpenBook/{id}");

            }


        }

        <style>
            .links-hidden1 {
                align-items: flex-end;
            }

            .bookrow {
                display: flex;
                flex-direction: row;
                justify-content: space-between;
            }

            .Header {
                display: flex;
                flex-direction: row;
                align-items: baseline;
                justify-content: space-between;
            }

            .Link {
                flex: 1;
            }

            .book1 {
                width: 150px;
                height: 250px;
                object-fit: cover;
                display: inline-block;
                margin-right: 20px;
            }

            .book2 {
                width: 200px;
                height: 300px;
                object-fit: cover;
                display: inline-block;
                opacity: 1;
            }

            .Title {
                font-size: 30px;
                font-weight: bold;
            }

            .Title1 {
                font-size: 30px;
                font-weight: bold;
                margin-top: 10px;
            }

            .search {
                width: 224.5px;
                font-size: 20px;
                border: 1px solid;
            }

            .bookList {
                list-style: none;
                padding: 0;
                margin: 0;
                white-space: nowrap;
                overflow-x: auto;
                overflow-y: hidden;
            }

            .bookItem {
                display: inline-block;
                vertical-align: top;
                margin-right: 10px;
            }
        </style>
    



@code {
    bool showPopup = false;
    string popupAuthor;
    string popupTitle;
    string popupImage;
    string popupDescription;

    void TogglePopup(string author, string title, string image, string description)
    {
        showPopup = !showPopup;
        popupAuthor = author;
        popupTitle = title;
        popupImage = image;
        popupDescription = description;

    }
}