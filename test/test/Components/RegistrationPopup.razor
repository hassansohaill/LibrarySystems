@inherits ComponentBase

@inject NavigationManager NavigationManager


@if (ShowPopup)
{
    <div class="popup-overlay"></div>
    <div class="popup">
        <button class="x-button" @onclick="@(async () => await ClosePopup())">&times;</button>
        <h2>Your account was successfully created!</h2>
        <p>Please check you email for your new library card number to login.</p>
        <button class="login-button" @onclick="GoToLogin">Go to login</button>
    </div>


}

<style>

    .popup-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9998;
    }


    .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        z-index: 9999;
    }

    .x-button {
        display: block;
        margin: 0 0 20px auto;
        background-color: transparent;
        font-size: 30px;
        color: #ffffff;
        background: #03549a;
        border-radius: 100%;
        width: 40px;
        height: 40px;
        border: none;
        outline: none;
        cursor: pointer;
    }

    .popup h2 {
        margin-top: -20px;
    }

    .popup p {
        font-size: 14px;
        text-align: justify;
        margin: 20px 0;
        line-height: 25px;
    }

    .login-button {
        display: block;
        width: 150px;
        position: relative;
        margin: 10px auto;
        text-align: center;
        background-color: #0f72e5;
        border-radius: 20px;
        color: #ffffff;
        text-decoration: none;
        padding: 8px 0;
    }
</style>

@code {

    [Parameter] public bool ParentShowPopup { get; set; }
    [Parameter] public EventCallback<bool> ShowPopupChanged { get; set; }

    private bool ShowPopup;

    protected override void OnParametersSet()
    {
        ShowPopup = ParentShowPopup;
    }

    private async Task ClosePopup()
    {
        ShowPopup = false;
        await ShowPopupChanged.InvokeAsync(ShowPopup);
    }

    protected void GoToLogin()
    {
        NavigationManager.NavigateTo("/loginPage");
    }
}